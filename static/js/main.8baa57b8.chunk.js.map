{"version":3,"sources":["CharacterCard.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","style","margin","onClick","click","id","src","image","data-id","width","alt","Characters","require","App","state","characters","clickedArr","score","highestScore","count","_this","indexOf","tempArr","push","setState","Math","max","shuffle","curr","this","i","length","index","floor","random","temp","_this2","href","map","e","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"02CAEe,SAASA,EAAcC,GAClC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAACC,OAAQ,QAASC,QAAS,kBAAKP,EAAMQ,MAAMR,EAAMS,MAChFR,EAAAC,EAAAC,cAAA,OAAKO,IAAKV,EAAMW,MAAOC,UAASZ,EAAMS,GAAIL,UAAU,eAAeC,MAAO,CAACQ,MAAO,QAASC,IAAI,SCH3G,IAAMC,EAAaC,EAAS,IAsEbC,6MAlEbC,MAAQ,CACNC,WAAYJ,EACZK,WAAY,GACZC,MAAO,EACPC,aAAc,KAchBC,MAAQ,SAAAd,GACN,IAA2C,IAAvCe,EAAKN,MAAME,WAAWK,QAAQhB,GAAY,CAE1C,IAAIiB,EAAUF,EAAKN,MAAME,WACzBM,EAAQC,KAAKlB,GACbe,EAAKI,SAAS,CAACR,WAAYM,IAC3BF,EAAKI,SAAS,CACZP,MAAOG,EAAKN,MAAMG,MAAQ,EAC1BC,aAAcO,KAAKC,IAAIN,EAAKN,MAAMG,MAAQ,EAAGG,EAAKN,MAAMI,gBAE1DE,EAAKO,eAGPP,EAAKI,SAAS,CAACP,MAAO,IACtBG,EAAKI,SAAS,CAACR,WAAY,KAC3BI,EAAKO,oFAzBP,IADA,IAAIC,EAAOC,KAAKf,MAAMC,WACbe,EAAIF,EAAKG,OAAO,EAAGD,GAAI,EAAGA,IAAK,CACtC,IAAIE,EAAQP,KAAKQ,MAAMR,KAAKS,UAAUJ,EAAE,IACxC,GAAIA,IAAME,EAAO,CACf,IAAIG,EAAOP,EAAKE,GAChBF,EAAKE,GAAKF,EAAKI,GACfJ,EAAKI,GAASG,GAGlBN,KAAKL,SAAS,CAACT,WAAYa,qCAwBpB,IAAAQ,EAAAP,KACP,OACEhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeqC,KAAK,KAAjC,eAGAxC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAAA,uCAGFF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,oBAAY8B,KAAKf,MAAMG,OACvBpB,EAAAC,EAAAC,cAAA,wBAAgB8B,KAAKf,MAAMI,gBAG/BrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACZ6B,KAAKf,MAAMC,WAAWuB,IAAI,SAAAC,GAAC,OAAI1C,EAAAC,EAAAC,cAACJ,EAAD,CAAeY,MAAOgC,EAAEhC,MAAOF,GAAIkC,EAAElC,GAAID,MAAOgC,EAAKjB,mBA1D7EqB,aCDlBC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8baa57b8.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function CharacterCard(props) {\n    return (\n        <div className=\"card mt-4\" style={{margin: \"auto\"}} onClick={() =>props.click(props.id)}>\n            <img src={props.image} data-id={props.id} className=\"card-img-top\" style={{width: \"14vw\"}} alt=\"...\"/>\n        </div>\n    )\n}\n","import React, { Component } from \"react\";\nimport CharacterCard from \"./CharacterCard\";\nconst Characters = require( \"./Character.json\");\n\n\nclass App extends Component {\n  state = {\n    characters: Characters,\n    clickedArr: [],\n    score: 0,\n    highestScore: 0\n  }\n  shuffle() {\n    var curr = this.state.characters;\n    for (var i = curr.length-1; i >=0; i--) {\n      var index = Math.floor(Math.random()*(i+1));\n      if (i !== index) {\n        var temp = curr[i];\n        curr[i] = curr[index];\n        curr[index] = temp;\n      }\n    }\n    this.setState({characters: curr});\n  }\n  count = id => {\n    if (this.state.clickedArr.indexOf(id) === -1) {\n        // console.log(\"not yet clicked\");\n        var tempArr = this.state.clickedArr;\n        tempArr.push(id);\n        this.setState({clickedArr: tempArr});\n        this.setState({\n          score: this.state.score + 1,\n          highestScore: Math.max(this.state.score + 1, this.state.highestScore)\n        });\n        this.shuffle();\n    }\n    else {\n      this.setState({score: 0});\n      this.setState({clickedArr: []});\n      this.shuffle();\n    }\n    \n\n  }\n\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-light bg-light\">\n          <a className=\"navbar-brand\" href=\"/\">\n            Clicky Game\n          </a>\n          <span className=\"text-center\">\n            <h2>Click an image to begin!</h2>\n          </span>\n\n          <span>\n            <h5>Score: {this.state.score}</h5>\n            <h5>highScore: {this.state.highestScore}</h5>\n          </span>\n        </nav>\n        <div className=\"container d-flex flex-row flex-wrap\">\n          {this.state.characters.map(e => <CharacterCard image={e.image} id={e.id} click={this.count}/>) } \n\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}